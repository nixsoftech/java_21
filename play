---
- name: Offline Ubuntu LTS Upgrade 18.04 -> 20.04 -> 22.04
  hosts: all
  become: yes
  vars:
    focal_log: /tmp/focal.log
    jammy_log: /tmp/jammy.log
    reboot_wait_timeout: 3600
    script_execution_timeout: 14400
    focal_script: /tmp/focal.sh
    jammy_script: /tmp/jammy.sh
    # Enhanced SSH settings
    ansible_ssh_common_args: "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ConnectTimeout=30 -o ServerAliveInterval=15 -o ServerAliveCountMax=10 -o TCPKeepAlive=yes"

  tasks:
    - name: Detect current Ubuntu version
      command: lsb_release -cs
      register: current_release
      changed_when: false

    - name: Show current release
      debug:
        msg: "Current release: {{ current_release.stdout }}"

    - name: Copy focal.sh to /tmp
      copy:
        src: focal.sh
        dest: "{{ focal_script }}"
        mode: '0755'

    - name: Copy jammy.sh to /tmp
      copy:
        src: jammy.sh
        dest: "{{ jammy_script }}"
        mode: '0755'

    # -------------------------------
    # Upgrade 18.04 -> 20.04 (focal)
    # -------------------------------
    - block:
        - name: Run focal.sh if OS is 18.04
          shell: "nohup bash {{ focal_script }} > {{ focal_log }} 2>&1 & echo $! > /tmp/focal.pid"
          args:
            executable: /bin/bash
          async: 0
          poll: 0
          register: focal_start

        - name: Wait briefly for script to start
          pause:
            seconds: 5

        - name: Monitor focal upgrade with aggressive connection recovery
          block:
            - name: Check if upgrade process is still running and log progress
              shell: |
                # Check if process is running
                if ps -p $(cat /tmp/focal.pid 2>/dev/null || echo 0) > /dev/null 2>&1; then
                  # Process running, check log for completion
                  if tail -n 10 {{ focal_log }} 2>/dev/null | grep -q "UPGRADE_COMPLETE"; then
                    echo "UPGRADE_COMPLETE"
                    exit 0
                  else
                    # Show recent log entries for debugging
                    echo "UPGRADE_IN_PROGRESS - Last log entries:"
                    tail -n 3 {{ focal_log }} 2>/dev/null || echo "No log file yet"
                    exit 1
                  fi
                else
                  # Process finished, check final status
                  if grep -q "UPGRADE_COMPLETE" {{ focal_log }} 2>/dev/null; then
                    echo "UPGRADE_COMPLETE_PROCESS_ENDED"
                    exit 0
                  else
                    echo "UPGRADE_FAILED_OR_HUNG"
                    exit 2
                  fi
                fi
              register: upgrade_status
              failed_when: upgrade_status.rc == 2
              changed_when: false

            - name: Display upgrade status
              debug:
                msg: "Focal upgrade status: {{ upgrade_status.stdout }}"
              
          rescue:
            - name: SSH connection failed - wait for recovery
              debug:
                msg: "SSH connection interrupted, waiting for service to stabilize..."
              failed_when: false

            - name: Wait before retrying connection
              pause:
                seconds: 15

          always:
            - name: Brief pause between checks
              pause:
                seconds: 10

          retries: 180  # 30 minutes total (180 * 25s â‰ˆ 75 minutes)
          delay: 5      # Reduced initial delay
          until: upgrade_status.rc == 0
          register: focal_monitor
          ignore_errors: yes

        - name: Verify SSH is stable after focal upgrade
          wait_for_connection:
            connect_timeout: 30
            sleep: 5
            delay: 5
            timeout: 300
          when: upgrade_status.rc == 0

        - name: Force wait after upgrade completion
          pause:
            seconds: 30
          when: upgrade_status.rc == 0

        - name: Detect Ubuntu version after focal upgrade
          command: lsb_release -cs
          register: release_after_focal
          changed_when: false
          retries: 3
          delay: 10

        - name: Show release after focal upgrade
          debug:
            msg: "Release after focal upgrade: {{ release_after_focal.stdout }}"

      when: current_release.stdout == "bionic"
      rescue:
        - name: Handle focal upgrade failures
          debug:
            msg: "Focal upgrade may have issues. Check {{ focal_log }} on the target system. Continuing anyway..."

    # -------------------------------
    # Upgrade 20.04 -> 22.04 (jammy)
    # -------------------------------
    - block:
        - name: Run jammy.sh if OS is 20.04
          shell: "nohup bash {{ jammy_script }} > {{ jammy_log }} 2>&1 & echo $! > /tmp/jammy.pid"
          args:
            executable: /bin/bash
          async: 0
          poll: 0
          register: jammy_start

        - name: Wait briefly for script to start
          pause:
            seconds: 5

        - name: Monitor jammy upgrade with aggressive connection recovery
          block:
            - name: Check if upgrade process is still running and log progress
              shell: |
                if ps -p $(cat /tmp/jammy.pid 2>/dev/null || echo 0) > /dev/null 2>&1; then
                  if tail -n 10 {{ jammy_log }} 2>/dev/null | grep -q "UPGRADE_COMPLETE"; then
                    echo "UPGRADE_COMPLETE"
                    exit 0
                  else
                    echo "UPGRADE_IN_PROGRESS - Last entries:"
                    tail -n 3 {{ jammy_log }} 2>/dev/null || echo "No log file yet"
                    exit 1
                  fi
                else
                  if grep -q "UPGRADE_COMPLETE" {{ jammy_log }} 2>/dev/null; then
                    echo "UPGRADE_COMPLETE_PROCESS_ENDED"
                    exit 0
                  else
                    echo "UPGRADE_FAILED_OR_HUNG"
                    exit 2
                  fi
                fi
              register: upgrade_status
              failed_when: upgrade_status.rc == 2
              changed_when: false

            - name: Display upgrade status
              debug:
                msg: "Jammy upgrade status: {{ upgrade_status.stdout }}"
              
          rescue:
            - name: SSH connection failed - wait for recovery
              debug:
                msg: "SSH connection interrupted during jammy upgrade, waiting..."
              failed_when: false

            - name: Wait before retrying connection
              pause:
                seconds: 15

          always:
            - name: Brief pause between checks
              pause:
                seconds: 10

          retries: 180
          delay: 5
          until: upgrade_status.rc == 0
          register: jammy_monitor
          ignore_errors: yes

        - name: Verify SSH is stable after jammy upgrade
          wait_for_connection:
            connect_timeout: 30
            sleep: 5
            delay: 5
            timeout: 300

        - name: Force wait after jammy upgrade completion
          pause:
            seconds: 30

      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal"
      rescue:
        - name: Handle jammy upgrade failures
          debug:
            msg: "Jammy upgrade may have issues. Check {{ jammy_log }} on the target system."

    # -------------------------------
    # Final OS check
    # -------------------------------
    - name: Detect Ubuntu version after upgrades
      command: lsb_release -cs
      register: final_release
      changed_when: false

    - name: Show final release
      debug:
        msg: "Final Ubuntu release: {{ final_release.stdout }}"

    - name: Display upgrade summary
      debug:
        msg: |
          Upgrade process completed!
          Initial release: {{ current_release.stdout }}
          Final release: {{ final_release.stdout }}
