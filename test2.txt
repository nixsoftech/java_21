def handle_peak_margin(app):
    """Handles the Peak Margin screen: waits for it, clicks Add, waits for grid to be visible."""
    main_win = app.window(title_re=".*Main.*")  # adjust if needed
    
    # Step 1: Wait for Peak Margin dialog
    peak_margin = app.window(title="Peak Margin", auto_id="mnuPeakMargin", control_type="Window")
    peak_margin.wait("exists enabled visible ready", timeout=30)
    peak_margin.set_focus()

    print("✅ Peak Margin window detected.")

    # Step 2: Click Add button
    add_btn = peak_margin.child_window(title="Add", auto_id="cmdAdd", control_type="Button")
    add_btn.wait("exists enabled visible", timeout=10)
    add_btn.click_input()
    print("✅ Clicked Add button.")

    # Step 3: Wait for grid to be visible
    grid = peak_margin.child_window(title="DataGridView", auto_id="grdPeakMargin", control_type="Table")
    grid.wait("exists enabled visible", timeout=20)
    print("✅ Data grid detected.")

    # (Optional) Step 4: Interact with first row
    first_row = grid.child_window(title="Row 0", control_type="Custom")
    if first_row.exists(timeout=5):
        first_row.click_input()
        print("✅ Selected Row 0.")
    else:
        print("⚠ No rows found after Add click.")

    # (Optional) you can send keystrokes to enter data here
    # from pywinauto.keyboard import send_keys
    # send_keys("10:00{TAB}10:30{TAB}30{TAB}Y{TAB}Active{TAB}Test remark{TAB}")

    return True
