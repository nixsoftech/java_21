def handle_post_login_popups(app, timeout=15):
    """
    Handles popups appearing right after login (BMS OpmsEngine & Close RMS confirmation).
    Waits up to `timeout` seconds for any matching popup.
    """
    start_time = time.time()
    while time.time() - start_time < timeout:
        try:
            popup = app.window(title_re=".*Risk Management System.*")
            popup.wait("visible", timeout=3)
            popup_text = popup.window_text().strip()
            logger.info(f"Post-login popup detected: '{popup_text}'")

            buttons = popup.children(control_type="Button")
            for btn in buttons:
                logger.info(f"Button -> Text='{btn.window_text()}' | AutoID={btn.automation_id()}")

            if "BMS OpmsEngine" in popup_text:
                # Click OK
                for btn in buttons:
                    if btn.window_text().strip().lower() == "ok":
                        btn.click_input()
                        logger.info("Clicked OK for BMS OpmsEngine popup.")
                        return True

            elif "Do you want to close the RMS" in popup_text:
                # Click NO
                for btn in buttons:
                    if btn.window_text().strip().lower() == "no":
                        btn.click_input()
                        logger.info("Clicked NO for 'Do you want to close RMS' popup.")
                        return True

            else:
                logger.warning("Popup found but text not recognized, skipping.")

        except TimeoutError:
            time.sleep(1)

    logger.info("No post-login popups detected within timeout.")
    return False
