def handle_peak_margin(app, main_win):
    logger.info("Looking for Peak Margin panel inside main window...")
    peak_margin_win = main_win.child_window(title="Peak Margin", control_type="Window")
    peak_margin_win.wait("visible", timeout=10)

    logger.info("Peak Margin panel detected. Clicking Add...")
    safe_click(peak_margin_win, title="Add", control_type="Button")
    time.sleep(1)

    # Capture all tables/list views
    tables = peak_margin_win.descendants(control_type="Table") + peak_margin_win.descendants(control_type="List")
    if not tables:
        raise RuntimeError("No tables/list views found in Peak Margin window after clicking Add")

    logger.info(f"Found {len(tables)} table/list controls inside Peak Margin window")

    # Pick first table/list for editing
    grid = tables[0]
    all_data_items = grid.descendants(control_type="DataItem")
    if not all_data_items:
        raise RuntimeError("No data cells found in selected table/list after clicking Add")

    columns_per_row = 8  # SrNo, Start, End, Exec, Flag, Status, Remarks, Edit
    rows = [all_data_items[i:i + columns_per_row] for i in range(0, len(all_data_items), columns_per_row)]
    last_row_cells = rows[-1]

    now = datetime.now()
    start_time = (datetime.combine(now.date(), datetime.min.time()) +
                  timedelta(hours=17, minutes=random.randint(0, 59))).strftime("%H:%M:%S")
    end_time = (datetime.strptime(start_time, "%H:%M:%S") + timedelta(minutes=10)).strftime("%H:%M:%S")

    logger.info(f"Filling new row with Start={start_time}, End={end_time} (Executable/Flag skipped)")

    # ---------------- Robust set_cell_value ----------------
    def set_cell_value(cell, value, max_attempts=3):
        """Set value in a grid cell using F2 + send_keys (no Edit control needed)."""
        for attempt in range(1, max_attempts + 1):
            try:
                cell.click_input(double=False)
                logger.info(f"Clicked cell, attempt {attempt} to set value '{value}'")

                # Activate edit mode
                cell.type_keys("{F2}")
                time.sleep(0.3)

                # Clear existing content and type new value
                send_keys("^a{BACKSPACE}", pause=0.05)
                send_keys(value, pause=0.05)
                send_keys("{ENTER}", pause=0.05)
                time.sleep(0.3)

                logger.info(f"Successfully set value '{value}' in cell on attempt {attempt}")
                return

            except Exception as e:
                logger.warning(f"Attempt {attempt} failed to set value '{value}': {e}")
                time.sleep(0.5)

        raise TimeoutError(f"Failed to set value '{value}' after {max_attempts} attempts")

    # ---------------- Fill Start and End times ----------------
    try:
        set_cell_value(last_row_cells[1], start_time)  # Start Time
        set_cell_value(last_row_cells[2], end_time)    # End Time
    except Exception as e:
        logger.error(f"Row filling failed: {e}")
        raise

    # Save the new row
    safe_click(peak_margin_win, title="Save", control_type="Button")
    time.sleep(2)
    logger.info("Row filled (Start & End) and saved successfully.")
