def handle_post_login_popups(app, timeout=20):
    """
    Handles sequential popups after login:
    1. "BMS OpmsEngine Got abandoned..." -> OK (AutomationId=2)
    2. "Do you want to close RMS ?" -> NO (AutomationId=7)
    """
    try:
        # Wait for first popup
        popup1 = app.window(title_re=".*")
        popup1.wait("visible", timeout=timeout)
        popup1_text = popup1.window_text().strip()
        logger.info(f"[Popup1] Detected: '{popup1_text}'")

        if "BMS OpmsEngine Got abandoned" in popup1_text:
            try:
                btn_ok = popup1.child_window(auto_id="2", control_type="Button")
                btn_ok.wait("enabled", timeout=5).click_input()
                logger.info("[Popup1] Clicked OK (AutomationId=2)")
            except Exception as e:
                logger.error(f"[Popup1] Failed to click OK: {e}")
        else:
            logger.warning("[Popup1] Unexpected popup text, dumping control identifiers:")
            logger.warning(popup1.print_control_identifiers())

        time.sleep(1)  # small delay to allow next popup to appear

        # Wait for second popup (Close RMS)
        popup2 = app.window(title_re=".*")
        popup2.wait("visible", timeout=timeout)
        popup2_text = popup2.window_text().strip()
        logger.info(f"[Popup2] Detected: '{popup2_text}'")

        if "close the RMS" in popup2_text or "Do you want to close" in popup2_text:
            try:
                btn_no = popup2.child_window(auto_id="7", control_type="Button")
                btn_no.wait("enabled", timeout=5).click_input()
                logger.info("[Popup2] Clicked NO (AutomationId=7)")
            except Exception as e:
                logger.error(f"[Popup2] Failed to click NO: {e}")
        else:
            logger.warning("[Popup2] Unexpected popup text, dumping control identifiers:")
            logger.warning(popup2.print_control_identifiers())

        return True

    except TimeoutError:
        logger.error("No post-login popups appeared within the given timeout.")
        return False
