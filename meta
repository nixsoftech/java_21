---
- name: Offline Ubuntu LTS upgrade 18.04 -> 20.04 -> 22.04
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    reboot_wait_timeout: 1800   # 30 minutes

  tasks:

    ##################################################
    # Setup & Backup
    ##################################################

    - name: Ensure log directory exists on control node
      delegate_to: localhost
      file:
        path: "./logs"
        state: directory

    - name: Backup /etc directory
      archive:
        path: /etc
        dest: "/etc_bkp_{{ ansible_date_time.iso8601 }}.tgz"
        format: gz

    - name: Copy focal.sh to /tmp/ on target
      copy:
        src: focal.sh
        dest: /tmp/focal.sh
        mode: '0755'

    - name: Copy jammy.sh to /tmp/ on target
      copy:
        src: jammy.sh
        dest: /tmp/jammy.sh
        mode: '0755'

    - name: Detect current Ubuntu version
      command: lsb_release -cs
      register: current_release
      changed_when: false

    ##################################################
    # Upgrade 18.04 -> 20.04 (focal)
    ##################################################

    - name: Run focal.sh in background if OS is 18.04
      shell: "nohup bash /tmp/focal.sh > /tmp/focal.log 2>&1 &"
      async: 1
      poll: 0
      ignore_errors: yes
      when: current_release.stdout == "bionic"

    - name: Wait for focal upgrade to complete (poll log)
      shell: grep -q "UPGRADE_COMPLETE" /tmp/focal.log
      register: focal_done
      retries: 200
      delay: 30
      ignore_errors: yes
      until: focal_done.rc == 0
      when: current_release.stdout == "bionic"

    - name: Wait for SSH after focal upgrade
      wait_for_connection:
        delay: 30
        timeout: "{{ reboot_wait_timeout }}"
      ignore_errors: yes
      when: current_release.stdout == "bionic"

    - name: Reboot after focal upgrade
      reboot:
        reboot_timeout: "{{ reboot_wait_timeout }}"
        pre_reboot_delay: 10
        post_reboot_delay: 30
      when: current_release.stdout == "bionic"

    - name: Verify OS version after focal upgrade
      command: lsb_release -cs
      register: release_after_focal
      changed_when: false
      when: current_release.stdout == "bionic"

    ##################################################
    # Upgrade 20.04 -> 22.04 (jammy)
    ##################################################

    - name: Run jammy.sh in background if OS is 20.04
      shell: "nohup bash /tmp/jammy.sh > /tmp/jammy.log 2>&1 &"
      async: 1
      poll: 0
      ignore_errors: yes
      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal" or current_release.stdout == "bionic"

    - name: Wait for jammy upgrade to complete (poll log)
      shell: grep -q "UPGRADE_COMPLETE" /tmp/jammy.log
      register: jammy_done
      retries: 200
      delay: 30
      ignore_errors: yes
      until: jammy_done.rc == 0
      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal" or current_release.stdout == "bionic"

    - name: Wait for SSH after jammy upgrade
      wait_for_connection:
        delay: 30
        timeout: "{{ reboot_wait_timeout }}"
      ignore_errors: yes
      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal" or current_release.stdout == "bionic"

    - name: Reboot after jammy upgrade
      reboot:
        reboot_timeout: "{{ reboot_wait_timeout }}"
        pre_reboot_delay: 10
        post_reboot_delay: 30
      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal" or current_release.stdout == "bionic"

    - name: Verify OS version after jammy upgrade
      command: lsb_release -cs
      register: release_after_jammy
      changed_when: false
      when: (release_after_focal.stdout | default('')) == "focal" or current_release.stdout == "focal" or current_release.stdout == "bionic"
