import subprocess
import time
import psutil
import win32gui
from appium import webdriver
from appium.options.windows import WindowsOptions

# Paths
winappdriver_path = r"C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe"
app_path = r"D:\Program Files (x86)\NCCL Ltd\RMSSetup\RMS FE.exe"

# Start WinAppDriver
print("Starting WinAppDriver...")
subprocess.Popen([winappdriver_path])
time.sleep(3)

# Launch RMS Application
print("Launching RMS Application...")
app_proc = subprocess.Popen([app_path])
time.sleep(5)  # give app some time to show window

# Get Main Window Handle by process id
def get_hwnd(pid):
    hwnds = []

    def callback(hwnd, _):
        if win32gui.IsWindowVisible(hwnd) and win32gui.IsWindowEnabled(hwnd):
            _, found_pid = win32gui.GetWindowThreadProcessId(hwnd)
            if found_pid == pid:
                hwnds.append(hwnd)
    win32gui.EnumWindows(callback, None)
    return hwnds[0] if hwnds else None

hwnd = get_hwnd(app_proc.pid)
if not hwnd:
    raise Exception("Could not find RMS window handle!")

# Convert hwnd to hex (needed for WinAppDriver)
hex_hwnd = hex(hwnd)
print(f"RMS hwnd: {hex_hwnd}")

# Attach with WinAppDriver using hwnd
options = WindowsOptions()
options.set_capability("platformName", "Windows")
options.set_capability("deviceName", "WindowsPC")
options.set_capability("appTopLevelWindow", hex_hwnd)

driver = webdriver.Remote("http://127.0.0.1:4723", options=options)
time.sleep(2)

# === Perform Login Flow ===

# 1. Select Environment = UAT
env_dropdown = driver.find_element("accessibility id", "cmb_Environment")
env_dropdown.click()
time.sleep(1)
driver.find_element("name", "UAT").click()

# 2. Select Login Via = RMS
loginvia_dropdown = driver.find_element("accessibility id", "cmb_LoginVia")
loginvia_dropdown.click()
time.sleep(1)
driver.find_element("name", "RMS").click()

# 3. Enter UserId
userid_box = driver.find_element("accessibility id", "txt_UserId")
userid_box.send_keys("myUserId")

# 4. Enter Password
password_box = driver.find_element("accessibility id", "txt_Password")
password_box.send_keys("myPassword")

# 5. Click Submit
submit_btn = driver.find_element("accessibility id", "btn_Submit")
submit_btn.click()

print("Login flow executed successfully.")

time.sleep(5)

# Close automation
driver.quit()
app_proc.terminate()
print("Automation finished, app closed.")
